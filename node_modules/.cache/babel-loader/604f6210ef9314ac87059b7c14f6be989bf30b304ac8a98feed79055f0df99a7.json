{"ast":null,"code":"var _jsxFileName = \"/Users/Briana/repos/quizzical-trivia-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Welcome from './components/Welcome';\nimport QuizPage from './components/QuizPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [started, setStarted] = useState(false);\n  const [quizData, setQuizData] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [playAgain, setPlayAgain] = useState(false);\n  function startQuiz() {\n    setStarted(true);\n  }\n  function newGame(event) {\n    event.preventDefault();\n    setIsFetched(false);\n    setPlayAgain(true);\n  }\n  useEffect(() => {\n    async function getQuizData() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\");\n      const data = await res.json();\n      setQuizData(data.results);\n      setIsFetched(true);\n    }\n    getQuizData();\n  }, [playAgain]);\n\n  //console.log(quizData)\n\n  //when setting newgame:\n  // quizstate needs to reset\n  // allAnswered > false\n  //checkAnswers > false\n  //numCorrectAnswers > null\n  //!perfectScore ? do nothing : setPerfectScore(true)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Welcome, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), started && isFetched && /*#__PURE__*/_jsxDEV(QuizPage, {\n      started: started,\n      quizData: quizData,\n      playAgain: playAgain,\n      newGame: newGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2sEqTyDPhoXIq4QZr+tJGUovOEg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Welcome","QuizPage","App","started","setStarted","quizData","setQuizData","isFetched","setIsFetched","playAgain","setPlayAgain","startQuiz","newGame","event","preventDefault","getQuizData","res","fetch","data","json","results"],"sources":["/Users/Briana/repos/quizzical-trivia-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Welcome from './components/Welcome';\nimport QuizPage from './components/QuizPage';\n\nexport default function App() {\n  const [started, setStarted] = useState(false);\n  const [quizData, setQuizData] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [playAgain, setPlayAgain] = useState(false);\n  \n\n  function startQuiz() {\n    setStarted(true);\n  }\n\n  function newGame(event) {\n    event.preventDefault();\n    setIsFetched(false);\n    setPlayAgain(true);\n  }\n\n  useEffect(() => {\n    async function getQuizData() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\");\n      const data = await res.json();\n      setQuizData(data.results);\n      setIsFetched(true);\n    }\n    getQuizData();\n  }, [playAgain])\n\n  //console.log(quizData)\n    \n    //when setting newgame:\n    // quizstate needs to reset\n    // allAnswered > false\n    //checkAnswers > false\n    //numCorrectAnswers > null\n    //!perfectScore ? do nothing : setPerfectScore(true)\n\n\n    \n  return (\n    <div className=\"App\">\n      <Welcome startQuiz={startQuiz}/>\n      {started && isFetched &&<QuizPage \n                    started={started} \n                    quizData={quizData}\n                    playAgain={playAgain}\n                    newGame={newGame}/>}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAGjD,SAASa,SAAS,GAAG;IACnBP,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,SAASQ,OAAO,CAACC,KAAK,EAAE;IACtBA,KAAK,CAACC,cAAc,EAAE;IACtBN,YAAY,CAAC,KAAK,CAAC;IACnBE,YAAY,CAAC,IAAI,CAAC;EACpB;EAEAX,SAAS,CAAC,MAAM;IACd,eAAegB,WAAW,GAAG;MAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oDAAoD,CAAC;MAC7E,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7Bb,WAAW,CAACY,IAAI,CAACE,OAAO,CAAC;MACzBZ,YAAY,CAAC,IAAI,CAAC;IACpB;IACAO,WAAW,EAAE;EACf,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;;EAEf;;EAEE;EACA;EACA;EACA;EACA;EACA;;EAIF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,OAAO;MAAC,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,EAC/BR,OAAO,IAAII,SAAS,iBAAG,QAAC,QAAQ;MACnB,OAAO,EAAEJ,OAAQ;MACjB,QAAQ,EAAEE,QAAS;MACnB,SAAS,EAAEI,SAAU;MACrB,OAAO,EAAEG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV;AAAC,GAhDuBV,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}