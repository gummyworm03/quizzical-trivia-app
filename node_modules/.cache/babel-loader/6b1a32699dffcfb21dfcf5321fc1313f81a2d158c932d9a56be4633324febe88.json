{"ast":null,"code":"var _jsxFileName = \"/Users/Briana/repos/quizzical-trivia-app/src/components/QuizCard.js\";\nimport React, { useState } from 'react';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizCard(props) {\n  //make sure to change answers to quizAnswers, so answers can be used in App state\n  let answers = [...props.incorrectAnswers, props.correctAnswer];\n  const shuffle = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n  shuffle(answers);\n  console.log(answers);\n  function decodeHtml(html) {\n    let txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: decodeHtml(props.question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"answer1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer1\",\n        children: decodeHtml(answers[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"answer2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer2\",\n        children: decodeHtml(answers[1])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"amswer3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer3\",\n        children: decodeHtml(answers[2])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"amswer4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer4\",\n        children: decodeHtml(answers[3])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = QuizCard;\nvar _c;\n$RefreshReg$(_c, \"QuizCard\");","map":{"version":3,"names":["React","useState","QuizCard","props","answers","incorrectAnswers","correctAnswer","shuffle","array","i","length","j","Math","floor","random","console","log","decodeHtml","html","txt","document","createElement","innerHTML","value","question"],"sources":["/Users/Briana/repos/quizzical-trivia-app/src/components/QuizCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles.css';\n\n\nexport default function QuizCard(props) {\n    //make sure to change answers to quizAnswers, so answers can be used in App state\n    let answers = [...props.incorrectAnswers, props.correctAnswer];\n    \n    const shuffle = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n          [array[i], array[j]] = [array[j], array[i]];\n        }\n      }\n    shuffle(answers);\n    console.log(answers);\n    \n    function decodeHtml(html) {\n        let txt = document.createElement('textarea');\n        txt.innerHTML = html;\n        return txt.value;\n    }\n\n    return (\n        <main className='quiz-card'>\n            <fieldset>\n                <legend>{decodeHtml(props.question)}</legend>\n                \n                <input \n                    type=\"radio\"\n                    name=\"answer1\"\n                />\n                <label htmlFor=\"answer1\">{decodeHtml(answers[0])}</label>\n                \n                <input \n                    type=\"radio\"\n                    name=\"answer2\"\n                />\n                <label htmlFor=\"answer2\">{decodeHtml(answers[1])}</label>\n                \n                <input \n                    type=\"radio\"\n                    name=\"amswer3\"\n                />\n                <label htmlFor=\"answer3\">{decodeHtml(answers[2])}</label>\n                \n                <input \n                    type=\"radio\"\n                    name=\"amswer4\"\n                />\n                <label htmlFor=\"answer4\">{decodeHtml(answers[3])}</label>\n\n            </fieldset>\n            <hr />\n        </main>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC;AAGvB,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EACpC;EACA,IAAIC,OAAO,GAAG,CAAC,GAAGD,KAAK,CAACE,gBAAgB,EAAEF,KAAK,CAACG,aAAa,CAAC;EAE9D,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACvB,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzC,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;IAC7C;EACF,CAAC;EACHF,OAAO,CAACH,OAAO,CAAC;EAChBW,OAAO,CAACC,GAAG,CAACZ,OAAO,CAAC;EAEpB,SAASa,UAAU,CAACC,IAAI,EAAE;IACtB,IAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IAC5CF,GAAG,CAACG,SAAS,GAAGJ,IAAI;IACpB,OAAOC,GAAG,CAACI,KAAK;EACpB;EAEA,oBACI;IAAM,SAAS,EAAC,WAAW;IAAA,wBACvB;MAAA,wBACI;QAAA,UAASN,UAAU,CAACd,KAAK,CAACqB,QAAQ;MAAC;QAAA;QAAA;QAAA;MAAA,QAAU,eAE7C;QACI,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAChB,eACF;QAAO,OAAO,EAAC,SAAS;QAAA,UAAEP,UAAU,CAACb,OAAO,CAAC,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS,eAEzD;QACI,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAChB,eACF;QAAO,OAAO,EAAC,SAAS;QAAA,UAAEa,UAAU,CAACb,OAAO,CAAC,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS,eAEzD;QACI,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAChB,eACF;QAAO,OAAO,EAAC,SAAS;QAAA,UAAEa,UAAU,CAACb,OAAO,CAAC,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS,eAEzD;QACI,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAChB,eACF;QAAO,OAAO,EAAC,SAAS;QAAA,UAAEa,UAAU,CAACb,OAAO,CAAC,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAElD,eACX;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf;AAAC,KApDuBF,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}