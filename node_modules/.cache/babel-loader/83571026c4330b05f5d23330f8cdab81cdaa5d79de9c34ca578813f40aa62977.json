{"ast":null,"code":"var _jsxFileName = \"/Users/Briana/repos/quizzical-trivia-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Welcome from './components/Welcome';\nimport QuizPage from './components/QuizPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [started, setStarted] = useState(false);\n  const [quizData, setQuizData] = useState([]);\n  const [playAgain, setPlayAgain] = useState(false);\n  function startQuiz() {\n    setStarted(true);\n  }\n  function newGame(event) {\n    event.preventDefault();\n    console.log('Play Again');\n    //setPlayAgain(true);\n  }\n\n  useEffect(() => {\n    async function getQuizData() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\");\n      const data = await res.json();\n      setQuizData(data.results);\n    }\n    getQuizData();\n  }, [playAgain]);\n\n  //when setting newgame:\n  // quizstate needs to reset\n  // allAnswered > false\n  //checkAnswers > false\n  //numCorrectAnswers > null\n  //!perfectScore ? do nothing : setPerfectScore(true)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Welcome, {\n      startQuiz: startQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), started && /*#__PURE__*/_jsxDEV(QuizPage, {\n      started: started,\n      quizData: quizData,\n      quizState: quizState,\n      allAnswered: allAnswered,\n      checkAnswers: checkAnswers,\n      numCorrectAnswers: numCorrectAnswers,\n      perfectScore: perfectScore,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      newGame: newGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n//when setting newgame:\n// quizstate needs to reset\n// allAnswered > false\n//checkAnswers > false\n//numCorrectAnswers > null\n//!perfectScore ? do nothing : setPerfectScore(true)\n_s(App, \"Dy0Ef2flxm105MEY7bxZ7L17eWw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Welcome","QuizPage","App","started","setStarted","quizData","setQuizData","playAgain","setPlayAgain","startQuiz","newGame","event","preventDefault","console","log","getQuizData","res","fetch","data","json","results","quizState","allAnswered","checkAnswers","numCorrectAnswers","perfectScore","handleChange","handleSubmit"],"sources":["/Users/Briana/repos/quizzical-trivia-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Welcome from './components/Welcome';\nimport QuizPage from './components/QuizPage';\n\nexport default function App() {\n  const [started, setStarted] = useState(false);\n  const [quizData, setQuizData] = useState([]);\n  const [playAgain, setPlayAgain] = useState(false);\n  \n\n  function startQuiz() {\n    setStarted(true);\n  }\n\n  function newGame(event) {\n    event.preventDefault();\n    console.log('Play Again')\n    //setPlayAgain(true);\n  }\n\n  useEffect(() => {\n    async function getQuizData() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\");\n      const data = await res.json();\n      setQuizData(data.results);\n    }\n    getQuizData();\n  }, [playAgain])\n\n    \n    \n    //when setting newgame:\n    // quizstate needs to reset\n    // allAnswered > false\n    //checkAnswers > false\n    //numCorrectAnswers > null\n    //!perfectScore ? do nothing : setPerfectScore(true)\n\n\n    \n  return (\n    <div className=\"App\">\n      <Welcome startQuiz={startQuiz}/>\n      {started &&<QuizPage \n                    started={started} \n                    quizData={quizData}\n                    quizState={quizState}\n                    allAnswered={allAnswered}\n                    checkAnswers={checkAnswers}\n                    numCorrectAnswers={numCorrectAnswers}\n                    perfectScore={perfectScore}\n                    handleChange={handleChange}\n                    handleSubmit={handleSubmit}\n                    newGame={newGame}/>}\n    </div>\n  );\n}\n\n\n//when setting newgame:\n    // quizstate needs to reset\n    // allAnswered > false\n    //checkAnswers > false\n    //numCorrectAnswers > null\n    //!perfectScore ? do nothing : setPerfectScore(true)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAGjD,SAASW,SAAS,GAAG;IACnBL,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,SAASM,OAAO,CAACC,KAAK,EAAE;IACtBA,KAAK,CAACC,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB;EACF;;EAEAf,SAAS,CAAC,MAAM;IACd,eAAegB,WAAW,GAAG;MAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oDAAoD,CAAC;MAC7E,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7Bb,WAAW,CAACY,IAAI,CAACE,OAAO,CAAC;IAC3B;IACAL,WAAW,EAAE;EACf,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;;EAIb;EACA;EACA;EACA;EACA;EACA;;EAIF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,OAAO;MAAC,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,EAC/BN,OAAO,iBAAG,QAAC,QAAQ;MACN,OAAO,EAAEA,OAAQ;MACjB,QAAQ,EAAEE,QAAS;MACnB,SAAS,EAAEgB,SAAU;MACrB,WAAW,EAAEC,WAAY;MACzB,YAAY,EAAEC,YAAa;MAC3B,iBAAiB,EAAEC,iBAAkB;MACrC,YAAY,EAAEC,YAAa;MAC3B,YAAY,EAAEC,YAAa;MAC3B,YAAY,EAAEC,YAAa;MAC3B,OAAO,EAAEjB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV;;AAGA;AACI;AACA;AACA;AACA;AACA;AAAA,GA5DoBR,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}