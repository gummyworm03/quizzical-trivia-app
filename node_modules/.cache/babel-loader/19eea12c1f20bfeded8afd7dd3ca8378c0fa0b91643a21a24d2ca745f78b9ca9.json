{"ast":null,"code":"var _jsxFileName = \"/Users/Briana/repos/quizzical-trivia-app/src/components/QuizCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizCard(props) {\n  _s();\n  //make sure to change answers to quizAnswers, so answers can be used in App state\n  let answers = [...props.incorrectAnswers, props.correctAnswer];\n  const shuffle = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n  useEffect(() => shuffle(answers), []);\n  function decodeHtml(html) {\n    let txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n  }\n  //checked helper function\n\n  const currentQuestion = props.quizState.filter(question => question.id === props.id);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: decodeHtml(props.question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${answers[0]}`,\n        name: `answer-${props.id}`,\n        value: answers[0],\n        checked: currentQuestion.selectedAnswer === answers[0],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${answers[0]}`,\n        children: decodeHtml(answers[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${answers[1]}`,\n        name: `answer-${props.id}`,\n        value: answers[1],\n        checked: props.quizState.filter(question => question.id === props.id).selectedAnswer === answers[1],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${answers[1]}`,\n        children: decodeHtml(answers[1])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${answers[2]}`,\n        name: `answer-${props.id}`,\n        value: answers[2],\n        checked: props.quizState.filter(question => question.id === props.id).selectedAnswer === answers[2],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${answers[2]}`,\n        children: decodeHtml(answers[2])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${answers[3]}`,\n        name: `answer-${props.id}`,\n        value: answers[3],\n        checked: props.quizState.filter(question => question.id === props.id).selectedAnswer === answers[3],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${answers[3]}`,\n        children: decodeHtml(answers[3])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizCard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = QuizCard;\nvar _c;\n$RefreshReg$(_c, \"QuizCard\");","map":{"version":3,"names":["React","useState","useEffect","QuizCard","props","answers","incorrectAnswers","correctAnswer","shuffle","array","i","length","j","Math","floor","random","decodeHtml","html","txt","document","createElement","innerHTML","value","currentQuestion","quizState","filter","question","id","selectedAnswer","event","handleChange"],"sources":["/Users/Briana/repos/quizzical-trivia-app/src/components/QuizCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles.css';\n\n\nexport default function QuizCard(props) {\n    //make sure to change answers to quizAnswers, so answers can be used in App state\n    let answers = [...props.incorrectAnswers, props.correctAnswer];\n    \n    const shuffle = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n          [array[i], array[j]] = [array[j], array[i]];\n        }\n      }\n    \n    useEffect(() =>shuffle(answers), []);\n    \n    function decodeHtml(html) {\n        let txt = document.createElement('textarea');\n        txt.innerHTML = html;\n        return txt.value;\n    }\n    //checked helper function\n    \n    const currentQuestion = props.quizState.filter(question => question.id === props.id);\n    \n\n    return (\n        <main className='quiz-card'>\n            <fieldset>\n                <legend>{decodeHtml(props.question)}</legend>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${answers[0]}`}\n                    name={`answer-${props.id}`}\n                    value={answers[0]}\n                    checked={currentQuestion.selectedAnswer === answers[0]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${answers[0]}`}>{decodeHtml(answers[0])}</label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${answers[1]}`}\n                    name={`answer-${props.id}`}\n                    value={answers[1]}\n                    checked={props.quizState.filter(question => question.id === props.id).selectedAnswer === answers[1]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${answers[1]}`}>{decodeHtml(answers[1])}</label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${answers[2]}`}\n                    name={`answer-${props.id}`}\n                    value={answers[2]}\n                    checked={props.quizState.filter(question => question.id === props.id).selectedAnswer === answers[2]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${answers[2]}`}>{decodeHtml(answers[2])}</label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${answers[3]}`}\n                    name={`answer-${props.id}`}\n                    value={answers[3]}\n                    checked={props.quizState.filter(question => question.id === props.id).selectedAnswer === answers[3]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${answers[3]}`}>{decodeHtml(answers[3])}</label>\n\n            </fieldset>\n            <hr />\n        </main>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}