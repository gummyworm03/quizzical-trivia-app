{"ast":null,"code":"var _jsxFileName = \"/Users/Briana/repos/quizzical-trivia-app/src/components/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles.css';\nimport { nanoid } from 'nanoid';\nimport QuizCard from './QuizCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage(props) {\n  _s();\n  const [quizState, setQuizState] = useState(getQuizState());\n  //const [isChecked, setIsChecked] = useState(false);\n\n  function getQuizState() {\n    return props.quizData.map(question => {\n      return {\n        id: question.question,\n        correctAnswer: question.correct_answer,\n        selectedAnswer: \"\"\n      };\n    });\n  }\n  function handleChange(event, id) {\n    const {\n      value,\n      checked,\n      name,\n      nextSibling\n    } = event.target;\n    console.log(checked, name, value, nextSibling);\n    setQuizState(prev => {\n      return prev.map(question => {\n        return question.id === id ? {\n          ...question,\n          selectedAnswer: value\n        } : question;\n      });\n    });\n  }\n\n  // function getIsChecked (event, id) {\n  //     const { value } = event.target;\n  //     const currentQuestion = quizState.filter(question => question.id === id);\n  //     if (currentQuestion.selectedAnswer === value) {\n  //         return;\n  //     } else {\n  //         setIsChecked(true);\n  //     }\n  // }\n\n  const quizElements = props.quizData.map(question => /*#__PURE__*/_jsxDEV(QuizCard, {\n    id: question.question,\n    question: question.question,\n    correctAnswer: question.correct_answer,\n    incorrectAnswers: question.incorrect_answers,\n    quizState: quizState,\n    handleChange: handleChange\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this));\n  console.log(quizState);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: props.started ? \"quiz-page fade-in\" : \"quiz-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [quizElements, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-check\",\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n//will need to do conditional rendering for button types\n_s(QuizPage, \"dLinCFs6+TH5kMGWpVW2sC6c9l8=\");\n_c = QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","nanoid","QuizCard","QuizPage","props","quizState","setQuizState","getQuizState","quizData","map","question","id","correctAnswer","correct_answer","selectedAnswer","handleChange","event","value","checked","name","nextSibling","target","console","log","prev","quizElements","incorrect_answers","started"],"sources":["/Users/Briana/repos/quizzical-trivia-app/src/components/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles.css';\nimport { nanoid } from 'nanoid';\nimport QuizCard from './QuizCard';\n\n\nexport default function QuizPage(props) {\n    const [quizState, setQuizState] = useState(getQuizState());\n    //const [isChecked, setIsChecked] = useState(false);\n    \n\n    function getQuizState() {\n        return (props.quizData.map(question => {\n            return ({\n                id: question.question,\n                correctAnswer: question.correct_answer,\n                selectedAnswer: \"\"\n            })\n        }))\n    }    \n    \n    function handleChange(event, id) {\n        const { value, checked, name, nextSibling } = event.target;\n        console.log(checked, name, value, nextSibling);\n        setQuizState(prev => {\n            return (prev.map(question => {\n                return question.id === id ? {...question, selectedAnswer: value} : question\n            }))\n        })\n    }\n\n    // function getIsChecked (event, id) {\n    //     const { value } = event.target;\n    //     const currentQuestion = quizState.filter(question => question.id === id);\n    //     if (currentQuestion.selectedAnswer === value) {\n    //         return;\n    //     } else {\n    //         setIsChecked(true);\n    //     }\n    // }\n    \n\n    const quizElements = props.quizData.map(question => (\n        <QuizCard \n            key={nanoid()}\n            id={question.question}\n            question={question.question}\n            correctAnswer={question.correct_answer}\n            incorrectAnswers={question.incorrect_answers}\n            quizState={quizState}\n            handleChange={handleChange}\n            \n        />\n    ))\n\n    console.log(quizState)\n    return (\n        <main className={props.started ? \"quiz-page fade-in\" : \"quiz-page\"}>\n            <form>\n                {quizElements}\n                <button className='button-check'>Check answers</button> \n            </form>\n        </main>\n    )\n}\n//will need to do conditional rendering for button types"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AACtB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAGlC,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAACO,YAAY,EAAE,CAAC;EAC1D;;EAGA,SAASA,YAAY,GAAG;IACpB,OAAQH,KAAK,CAACI,QAAQ,CAACC,GAAG,CAACC,QAAQ,IAAI;MACnC,OAAQ;QACJC,EAAE,EAAED,QAAQ,CAACA,QAAQ;QACrBE,aAAa,EAAEF,QAAQ,CAACG,cAAc;QACtCC,cAAc,EAAE;MACpB,CAAC;IACL,CAAC,CAAC;EACN;EAEA,SAASC,YAAY,CAACC,KAAK,EAAEL,EAAE,EAAE;IAC7B,MAAM;MAAEM,KAAK;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAAY,CAAC,GAAGJ,KAAK,CAACK,MAAM;IAC1DC,OAAO,CAACC,GAAG,CAACL,OAAO,EAAEC,IAAI,EAAEF,KAAK,EAAEG,WAAW,CAAC;IAC9Cd,YAAY,CAACkB,IAAI,IAAI;MACjB,OAAQA,IAAI,CAACf,GAAG,CAACC,QAAQ,IAAI;QACzB,OAAOA,QAAQ,CAACC,EAAE,KAAKA,EAAE,GAAG;UAAC,GAAGD,QAAQ;UAAEI,cAAc,EAAEG;QAAK,CAAC,GAAGP,QAAQ;MAC/E,CAAC,CAAC;IACN,CAAC,CAAC;EACN;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAMe,YAAY,GAAGrB,KAAK,CAACI,QAAQ,CAACC,GAAG,CAACC,QAAQ,iBAC5C,QAAC,QAAQ;IAEL,EAAE,EAAEA,QAAQ,CAACA,QAAS;IACtB,QAAQ,EAAEA,QAAQ,CAACA,QAAS;IAC5B,aAAa,EAAEA,QAAQ,CAACG,cAAe;IACvC,gBAAgB,EAAEH,QAAQ,CAACgB,iBAAkB;IAC7C,SAAS,EAAErB,SAAU;IACrB,YAAY,EAAEU;EAAa,GANtBd,MAAM,EAAE;IAAA;IAAA;IAAA;EAAA,QASpB,CAAC;EAEFqB,OAAO,CAACC,GAAG,CAAClB,SAAS,CAAC;EACtB,oBACI;IAAM,SAAS,EAAED,KAAK,CAACuB,OAAO,GAAG,mBAAmB,GAAG,WAAY;IAAA,uBAC/D;MAAA,WACKF,YAAY,eACb;QAAQ,SAAS,EAAC,cAAc;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACpD;IAAA;IAAA;IAAA;EAAA,QACJ;AAEf;AACA;AAAA,GA3DwBtB,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}