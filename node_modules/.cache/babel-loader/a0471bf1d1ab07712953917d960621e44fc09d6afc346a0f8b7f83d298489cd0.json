{"ast":null,"code":"var _jsxFileName = \"/Users/Briana/repos/quizzical-trivia-app/src/components/QuizCard.js\";\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizCard(props) {\n  function decodeHtml(html) {\n    let txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n  }\n\n  //Get current question and save in variable for readability\n  function getCurrentQuestion() {\n    const questionIndex = props.quizState.findIndex(question => question.id === props.id);\n    return props.quizState[questionIndex];\n  }\n  const currentQuestion = getCurrentQuestion();\n\n  //show correct/incorrect answers when checkAnswers is true\n  //if selected answer === correct answer, turn green,\n  //if selected answer !== correct answer, turn red && turn correct answer green\n  //checkAnswers && currentQuestion.answers[] === currentQuestion.correctAnswer ? ans-correct : \n  //                                                                                             currentQuestion.selectedAnswer === answers[] ?  ans-incorrect : \"\"\n\n  //checkAnswers ? currentQuestion.answers[] === currentQuestion.correctAnswer ? ans-correct : \n  //                                                                                             currentQuestion.selectedAnswer === answers[] ?  ans-incorrect : \"\"\n  //              : \"\"\n  //    if (checkAnswers) {\n  //     if (currentQuestion.answers[0] === currentQuestion.correctAnswer) {\n  //         return 'ans-correct'\n  //     } else if (currentQuestion.selectedAnswer === answers[0]) {\n  //         return 'ans-incorrect'\n  //     } else {\n  //         return ''\n  //     }\n  //    }\n\n  function getAnswerClass(index) {\n    if (props.checkAnswers) {\n      if (currentQuestion.answers[index] === currentQuestion.correctAnswer) {\n        return 'ans-correct';\n      } else if (currentQuestion.selectedAnswer === currentQuestion.answers[index]) {\n        return 'ans-incorrect';\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: decodeHtml(props.question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${currentQuestion.answers[0]}`,\n        name: `answer-${props.id}`,\n        value: currentQuestion.answers[0],\n        checked: currentQuestion.selectedAnswer === currentQuestion.answers[0],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${currentQuestion.answers[0]}`,\n        className: getAnswerClass(0),\n        children: decodeHtml(currentQuestion.answers[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${currentQuestion.answers[1]}`,\n        name: `answer-${props.id}`,\n        value: currentQuestion.answers[1],\n        checked: currentQuestion.selectedAnswer === currentQuestion.answers[1],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${currentQuestion.answers[1]}`,\n        className: getAnswerClass(1),\n        children: decodeHtml(currentQuestion.answers[1])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${currentQuestion.answers[2]}`,\n        name: `answer-${props.id}`,\n        value: currentQuestion.answers[2],\n        checked: currentQuestion.selectedAnswer === currentQuestion.answers[2],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${currentQuestion.answers[2]}`,\n        className: getAnswerClass(2),\n        children: decodeHtml(currentQuestion.answers[2])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${currentQuestion.answers[3]}`,\n        name: `answer-${props.id}`,\n        value: currentQuestion.answers[3],\n        checked: currentQuestion.selectedAnswer === currentQuestion.answers[3],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${currentQuestion.answers[3]}`,\n        className: getAnswerClass(3),\n        children: decodeHtml(currentQuestion.answers[3])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_c = QuizCard;\nvar _c;\n$RefreshReg$(_c, \"QuizCard\");","map":{"version":3,"names":["QuizCard","props","decodeHtml","html","txt","document","createElement","innerHTML","value","getCurrentQuestion","questionIndex","quizState","findIndex","question","id","currentQuestion","getAnswerClass","index","checkAnswers","answers","correctAnswer","selectedAnswer","event","handleChange"],"sources":["/Users/Briana/repos/quizzical-trivia-app/src/components/QuizCard.js"],"sourcesContent":["import '../styles.css';\n\n\nexport default function QuizCard(props) {\n\n    function decodeHtml(html) {\n        let txt = document.createElement('textarea');\n        txt.innerHTML = html;\n        return txt.value;\n    }\n\n    //Get current question and save in variable for readability\n    function getCurrentQuestion() {\n        const questionIndex = props.quizState.findIndex(question => question.id === props.id);\n        return props.quizState[questionIndex];\n    }\n    const currentQuestion = getCurrentQuestion();\n\n    \n    //show correct/incorrect answers when checkAnswers is true\n    //if selected answer === correct answer, turn green,\n    //if selected answer !== correct answer, turn red && turn correct answer green\n    //checkAnswers && currentQuestion.answers[] === currentQuestion.correctAnswer ? ans-correct : \n    //                                                                                             currentQuestion.selectedAnswer === answers[] ?  ans-incorrect : \"\"\n\n    //checkAnswers ? currentQuestion.answers[] === currentQuestion.correctAnswer ? ans-correct : \n    //                                                                                             currentQuestion.selectedAnswer === answers[] ?  ans-incorrect : \"\"\n    //              : \"\"\n//    if (checkAnswers) {\n//     if (currentQuestion.answers[0] === currentQuestion.correctAnswer) {\n//         return 'ans-correct'\n//     } else if (currentQuestion.selectedAnswer === answers[0]) {\n//         return 'ans-incorrect'\n//     } else {\n//         return ''\n//     }\n//    }\n\n    function getAnswerClass(index) {\n        if (props.checkAnswers) {\n            if (currentQuestion.answers[index] === currentQuestion.correctAnswer) {\n                return 'ans-correct'\n            } else if (currentQuestion.selectedAnswer === currentQuestion.answers[index]) {\n                return 'ans-incorrect'\n            } else {\n                return \"\"\n            }\n        } else {\n            return \"\"\n        }\n    }\n\n    return (\n        <main className='quiz-card'>\n            <fieldset>\n                <legend>{decodeHtml(props.question)}</legend>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${currentQuestion.answers[0]}`}\n                    name={`answer-${props.id}`}\n                    value={currentQuestion.answers[0]}\n                    checked={currentQuestion.selectedAnswer === currentQuestion.answers[0]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${currentQuestion.answers[0]}`}\n                        className={getAnswerClass(0)}>\n                    {decodeHtml(currentQuestion.answers[0])}\n                </label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${currentQuestion.answers[1]}`}\n                    name={`answer-${props.id}`}\n                    value={currentQuestion.answers[1]}\n                    checked={currentQuestion.selectedAnswer === currentQuestion.answers[1]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                    \n                />\n                <label htmlFor={`answer-${currentQuestion.answers[1]}`}\n                        className={getAnswerClass(1)}>\n                    {decodeHtml(currentQuestion.answers[1])}\n                </label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${currentQuestion.answers[2]}`}\n                    name={`answer-${props.id}`}\n                    value={currentQuestion.answers[2]}\n                    checked={currentQuestion.selectedAnswer === currentQuestion.answers[2]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${currentQuestion.answers[2]}`}\n                        className={getAnswerClass(2)}>\n                    {decodeHtml(currentQuestion.answers[2])}\n                </label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${currentQuestion.answers[3]}`}\n                    name={`answer-${props.id}`}\n                    value={currentQuestion.answers[3]}\n                    checked={currentQuestion.selectedAnswer === currentQuestion.answers[3]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${currentQuestion.answers[3]}`}\n                        className={getAnswerClass(3)}>\n                    {decodeHtml(currentQuestion.answers[3])}\n                </label>\n\n            </fieldset>\n            <hr />\n        </main>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}