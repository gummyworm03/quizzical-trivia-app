{"ast":null,"code":"var _jsxFileName = \"/Users/Briana/repos/quizzical-trivia-app/src/components/QuizCard.js\";\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizCard(props) {\n  //console.log(props.quizState)\n  function decodeHtml(html) {\n    let txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n  }\n\n  //Get current question and save in variable for readability\n  function getCurrentQuestion() {\n    const questionIndex = props.quizState.findIndex(question => question.id === props.id);\n    return props.quizState[questionIndex];\n  }\n  const currentQuestion = getCurrentQuestion();\n  console.log(currentQuestion);\n\n  //Apply conditional styling after scoring answers\n  function getAnswerClass(index) {\n    if (props.checkAnswers) {\n      if (currentQuestion.answers[index] === currentQuestion.correctAnswer) {\n        return {\n          backgroundColor: '#94D7A2',\n          borderColor: '#94D7A2'\n        };\n      } else if (currentQuestion.selectedAnswer === currentQuestion.answers[index]) {\n        return {\n          backgroundColor: '#F8BCBC',\n          borderColor: '#F8BCBC',\n          opacity: 0.5\n        };\n      } else {\n        return {\n          color: '#4D5B9E',\n          borderColor: '#4D5B9E',\n          opacity: 0.5\n        };\n      }\n    } else {\n      return {};\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"quiz-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: decodeHtml(props.question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${currentQuestion.answers[0]}`,\n        name: `answer-${props.id}`,\n        value: currentQuestion.answers[0],\n        checked: currentQuestion.selectedAnswer === currentQuestion.answers[0],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${currentQuestion.answers[0]}`,\n        style: getAnswerClass(0),\n        children: decodeHtml(currentQuestion.answers[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${currentQuestion.answers[1]}`,\n        name: `answer-${props.id}`,\n        value: currentQuestion.answers[1],\n        checked: currentQuestion.selectedAnswer === currentQuestion.answers[1],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${currentQuestion.answers[1]}`,\n        style: getAnswerClass(1),\n        children: decodeHtml(currentQuestion.answers[1])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${currentQuestion.answers[2]}`,\n        name: `answer-${props.id}`,\n        value: currentQuestion.answers[2],\n        checked: currentQuestion.selectedAnswer === currentQuestion.answers[2],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${currentQuestion.answers[2]}`,\n        style: getAnswerClass(2),\n        children: decodeHtml(currentQuestion.answers[2])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${currentQuestion.answers[3]}`,\n        name: `answer-${props.id}`,\n        value: currentQuestion.answers[3],\n        checked: currentQuestion.selectedAnswer === currentQuestion.answers[3],\n        onChange: event => props.handleChange(event, props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${currentQuestion.answers[3]}`,\n        style: getAnswerClass(3),\n        children: decodeHtml(currentQuestion.answers[3])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_c = QuizCard;\nvar _c;\n$RefreshReg$(_c, \"QuizCard\");","map":{"version":3,"names":["QuizCard","props","decodeHtml","html","txt","document","createElement","innerHTML","value","getCurrentQuestion","questionIndex","quizState","findIndex","question","id","currentQuestion","console","log","getAnswerClass","index","checkAnswers","answers","correctAnswer","backgroundColor","borderColor","selectedAnswer","opacity","color","event","handleChange"],"sources":["/Users/Briana/repos/quizzical-trivia-app/src/components/QuizCard.js"],"sourcesContent":["import '../styles.css';\n\n\nexport default function QuizCard(props) {\n    //console.log(props.quizState)\n    function decodeHtml(html) {\n        let txt = document.createElement('textarea');\n        txt.innerHTML = html;\n        return txt.value;\n    }\n\n    //Get current question and save in variable for readability\n    function getCurrentQuestion() {\n        const questionIndex = props.quizState.findIndex(question => question.id === props.id);\n        return props.quizState[questionIndex];\n    }\n    const currentQuestion = getCurrentQuestion();\n    console.log(currentQuestion)\n\n    //Apply conditional styling after scoring answers\n    function getAnswerClass(index) {\n        if (props.checkAnswers) {\n            if (currentQuestion.answers[index] === currentQuestion.correctAnswer) {\n                return ({\n                    backgroundColor: '#94D7A2',\n                    borderColor: '#94D7A2'\n                })\n            } else if (currentQuestion.selectedAnswer === currentQuestion.answers[index]) {\n                return ({\n                    backgroundColor: '#F8BCBC',\n                    borderColor: '#F8BCBC',\n                    opacity: 0.5\n                })\n            } else {\n                return ({\n                    color: '#4D5B9E',\n                    borderColor: '#4D5B9E',\n                    opacity: 0.5\n                })\n            }\n        } else {\n            return {}\n        }\n    }\n\n    return (\n        <main className='quiz-card'>\n            <fieldset>\n                <legend>{decodeHtml(props.question)}</legend>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${currentQuestion.answers[0]}`}\n                    name={`answer-${props.id}`}\n                    value={currentQuestion.answers[0]}\n                    checked={currentQuestion.selectedAnswer === currentQuestion.answers[0]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${currentQuestion.answers[0]}`}\n                        style={getAnswerClass(0)}>\n                    {decodeHtml(currentQuestion.answers[0])}\n                </label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${currentQuestion.answers[1]}`}\n                    name={`answer-${props.id}`}\n                    value={currentQuestion.answers[1]}\n                    checked={currentQuestion.selectedAnswer === currentQuestion.answers[1]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                    \n                />\n                <label htmlFor={`answer-${currentQuestion.answers[1]}`}\n                        style={getAnswerClass(1)}>\n                    {decodeHtml(currentQuestion.answers[1])}\n                </label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${currentQuestion.answers[2]}`}\n                    name={`answer-${props.id}`}\n                    value={currentQuestion.answers[2]}\n                    checked={currentQuestion.selectedAnswer === currentQuestion.answers[2]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${currentQuestion.answers[2]}`}\n                        style={getAnswerClass(2)}>\n                    {decodeHtml(currentQuestion.answers[2])}\n                </label>\n                \n                <input \n                    type=\"radio\"\n                    id={`answer-${currentQuestion.answers[3]}`}\n                    name={`answer-${props.id}`}\n                    value={currentQuestion.answers[3]}\n                    checked={currentQuestion.selectedAnswer === currentQuestion.answers[3]}\n                    onChange={(event)=>props.handleChange(event,props.id)}\n                />\n                <label htmlFor={`answer-${currentQuestion.answers[3]}`}\n                        style={getAnswerClass(3)}>\n                    {decodeHtml(currentQuestion.answers[3])}\n                </label>\n\n            </fieldset>\n            <hr />\n        </main>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}